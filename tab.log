   1: 
   2: def find_primes():
Scanner: def token on line 2
Scanner: name token on line 2: find_primes
Scanner: ( token on line 2
Scanner: ) token on line 2
Scanner: : token on line 2
Scanner: NEWLINE token on line 2
   3:    i1 = 2
Scanner: INDENT token on line 3
Scanner: name token on line 3: i1
Scanner: = token on line 3
Scanner: integer literal token on line 3: 2
Scanner: NEWLINE token on line 3
   4:    while i1 <= n:
Scanner: while token on line 4
Scanner: name token on line 4: i1
Scanner: <= token on line 4
Scanner: name token on line 4: n
Scanner: : token on line 4
Scanner: NEWLINE token on line 4
   5:       i2 = 2 * i1
Scanner: INDENT token on line 5
Scanner: name token on line 5: i2
Scanner: = token on line 5
Scanner: integer literal token on line 5: 2
Scanner: * token on line 5
Scanner: name token on line 5: i1
Scanner: NEWLINE token on line 5
   6:       while i2 <= n:
Scanner: while token on line 6
Scanner: name token on line 6: i2
Scanner: <= token on line 6
Scanner: name token on line 6: n
Scanner: : token on line 6
Scanner: NEWLINE token on line 6
   7:          primes[i2] = False
Scanner: INDENT token on line 7
Scanner: name token on line 7: primes
Scanner: [ token on line 7
Scanner: name token on line 7: i2
Scanner: ] token on line 7
Scanner: = token on line 7
Scanner: False token on line 7
Scanner: NEWLINE token on line 7
   8:          i2 = i2 + i1
Scanner: name token on line 8: i2
Scanner: = token on line 8
Scanner: name token on line 8: i2
Scanner: + token on line 8
Scanner: name token on line 8: i1
Scanner: NEWLINE token on line 8
   9:       i1 = i1+1
Scanner: DEDENT token on line 9
Scanner: name token on line 9: i1
Scanner: = token on line 9
Scanner: name token on line 9: i1
Scanner: + token on line 9
Scanner: integer literal token on line 9: 1
Scanner: NEWLINE token on line 9
Scanner: DEDENT token
Scanner: DEDENT token
Scanner: E-o-f token
Scanner: NEWLINE token
